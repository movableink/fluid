<div class="fluid-select" ...attributes>
  <BasicDropdown
    class="w-full"
    @renderInPlace={{@renderInPlace}}
    @onOpen={{action (optional @onOpen)}}
    @onClose={{action (optional @onClose)}}
    @triggerComponent={{component "fluid-select/trigger"}}
    @matchTriggerWidth={{@matchTriggerWidth}}
    as |dropdown|
  >
    {{#with
      (queue (action this.updateSelected) (action dropdown.actions.close))
      as |selectAndClose|
    }}
      {{#with
        (hash
          popup=(component
            dropdown.Content
            defaultClass=(concat
              "fluid-select__wrapper"
              (if @dark " ember-basic-dropdown-content--dark")
              " rounded border border-neutral-400"
            )
          )
          trigger=(component
            dropdown.Trigger
            defaultClass=(concat "fluid-button" (if @dark " type:outline text-white"))
            dark=@dark
            multiple=@multiple
            selected=@selected
            disabled=@disabled
            label=@label
          )
          search=(component
            "fluid-select/search"
            searchQuery=this.searchQuery
            dark=@dark
            loading=this.searchLoading
            search=(queue (action this.updateSearchQuery) (action (perform this.searchTask)))
          )
          list=(component
            "fluid-select/list"
            selected=@selected
            dark=@dark
            loading=@loading
            multiple=@multiple
            labelPath=@labelPath
            options=(if (and this.lastSearch this.searchQuery) this.lastSearch.value @options)
            select=(if @multiple (action this.updateSelected) (action selectAndClose))
          )
          option=(component
            "fluid-select/option"
            multiple=@multiple
            dark=@dark
            labelPath=@labelPath
            selected=@selected
            select=(if @multiple (action this.updateSelected) (action selectAndClose))
          )
          open=(action dropdown.actions.open)
          close=(action dropdown.actions.close)
          toggle=(action dropdown.actions.toggle)
          selectAndClose=(action selectAndClose)
        )
        as |selectComponent|
      }}
        {{#if (has-block)}}
          {{yield selectComponent}}
        {{else}}
          <selectComponent.trigger />

          <selectComponent.popup>
            {{#if @search}}
              <selectComponent.search />
            {{/if}}

            <selectComponent.list />
          </selectComponent.popup>
        {{/if}}
      {{/with}}
    {{/with}}
  </BasicDropdown>
</div>